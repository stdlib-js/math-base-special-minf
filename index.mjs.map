{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isNegativeZerof from '@stdlib/math-base-assert-is-negative-zerof';\nimport isnanf from '@stdlib/math-base-assert-is-nanf';\nimport NINF from '@stdlib/constants-float32-ninf';\n\n\n// MAIN //\n\n/**\n* Returns the minimum single-precision floating-point number.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @returns {number} minimum value\n*\n* @example\n* var v = minf( 3.14, 4.2 );\n* // returns 3.14\n*\n* @example\n* var v = minf( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = minf( +0.0, -0.0 );\n* // returns -0.0\n*/\nfunction minf( x, y ) {\n\tif ( isnanf( x ) || isnanf( y ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x === NINF || y === NINF ) {\n\t\treturn NINF;\n\t}\n\tif ( x === y && x === 0.0 ) {\n\t\tif ( isNegativeZerof( x ) ) {\n\t\t\treturn x;\n\t\t}\n\t\treturn y;\n\t}\n\tif ( x < y ) {\n\t\treturn x;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default minf;\n"],"names":["minf","x","y","isnanf","NaN","NINF","isNegativeZerof"],"mappings":";;iTAgDA,SAASA,EAAMC,EAAGC,GACjB,OAAKC,EAAQF,IAAOE,EAAQD,GACpBE,IAEHH,IAAMI,GAAQH,IAAMG,EACjBA,EAEHJ,IAAMC,GAAW,IAAND,EACVK,EAAiBL,GACdA,EAEDC,EAEHD,EAAIC,EACDD,EAEDC,CACR"}